// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	billing "github.com/paysuper/paysuper-billing-server/pkg/proto/billing"
	mock "github.com/stretchr/testify/mock"
)

// VatRepositoryInterface is an autogenerated mock type for the VatRepositoryInterface type
type VatRepositoryInterface struct {
	mock.Mock
}

// GetByCountry provides a mock function with given fields: _a0
func (_m *VatRepositoryInterface) GetByCountry(_a0 string) ([]*billing.MgoVatReport, error) {
	ret := _m.Called(_a0)

	var r0 []*billing.MgoVatReport
	if rf, ok := ret.Get(0).(func(string) []*billing.MgoVatReport); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*billing.MgoVatReport)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetById provides a mock function with given fields: _a0
func (_m *VatRepositoryInterface) GetById(_a0 string) (*billing.MgoVatReport, error) {
	ret := _m.Called(_a0)

	var r0 *billing.MgoVatReport
	if rf, ok := ret.Get(0).(func(string) *billing.MgoVatReport); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*billing.MgoVatReport)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
